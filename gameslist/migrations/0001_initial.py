# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-18 18:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('release_date', models.DateField(verbose_name='date released')),
                ('system', models.CharField(choices=[('3DS', '3DS'), ('AND', 'Android'), ('DIG', 'Digipen'), ('NDS', 'DS'), ('GCN', 'Gamecube'), ('GBC', 'GBC'), ('GBA', 'GBA'), ('GOG', 'GoG'), ('HUM', 'Humble'), ('IIO', 'Itch.io'), ('KIN', 'Kindle'), ('NES', 'NES'), ('N64', 'N64'), ('ORN', 'Origin'), ('PC', 'PC'), ('PSX', 'Playstation'), ('PS2', 'Playstation 2'), ('PS3', 'Playstation 3'), ('PS4', 'Playstation 4'), ('SNS', 'SNES'), ('STM', 'Steam'), ('NSW', 'Switch'), ('TWH', 'Twitch'), ('UPL', 'Uplay'), ('VIT', 'Vita'), ('WII', 'Wii'), ('WIU', 'Wii U'), ('XBX', 'Xbox'), ('360', 'Xbox 360'), ('XB1', 'Xbox One')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Owned',
            fields=[
                ('game_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gameslist.Game')),
                ('location', models.CharField(choices=[('3DS', '3DS'), ('AND', 'Android'), ('DIG', 'Digipen'), ('NDS', 'DS'), ('GCN', 'Gamecube'), ('GBC', 'GBC'), ('GBA', 'GBA'), ('GOG', 'GoG'), ('HUM', 'Humble'), ('IIO', 'Itch.io'), ('KIN', 'Kindle'), ('NES', 'NES'), ('N64', 'N64'), ('ORN', 'Origin'), ('PC', 'PC'), ('PSX', 'Playstation'), ('PS2', 'Playstation 2'), ('PS3', 'Playstation 3'), ('PS4', 'Playstation 4'), ('SNS', 'SNES'), ('STM', 'Steam'), ('NSW', 'Switch'), ('TWH', 'Twitch'), ('UPL', 'Uplay'), ('VIT', 'Vita'), ('WII', 'Wii'), ('WIU', 'Wii U'), ('XBX', 'Xbox'), ('360', 'Xbox 360'), ('XB1', 'Xbox One')], max_length=3)),
                ('game_format', models.CharField(choices=[('P', 'Physical'), ('D', 'Digital'), ('M', 'Missing'), ('B', 'Borrowed'), ('N', 'None')], max_length=1, verbose_name='format')),
                ('series', models.CharField(max_length=100)),
                ('developer', models.CharField(max_length=100)),
                ('publisher', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=500)),
                ('purchase_date', models.DateField(verbose_name='date purchased')),
                ('finish_date', models.DateField(verbose_name='date finished')),
                ('played', models.BooleanField(default=False)),
                ('beaten', models.BooleanField(default=False)),
                ('abandoned', models.BooleanField(default=False)),
                ('perler', models.BooleanField(default=False)),
                ('reviewed', models.BooleanField(default=False)),
                ('streamable', models.BooleanField(default=False)),
                ('recordable', models.BooleanField(default=False)),
                ('pursued', models.BooleanField(default=False)),
                ('substantial_progress', models.BooleanField(default=False)),
                ('aging', models.IntegerField(default=0)),
                ('play_aging', models.IntegerField(default=0)),
                ('time_to_beat', models.IntegerField(default=0)),
                ('current_time', models.IntegerField(default=0)),
                ('number_of_eps', models.IntegerField(default=0)),
                ('aging_effect', models.FloatField(default=0.0)),
                ('aging_non_ep', models.IntegerField(default=0)),
                ('priority', models.IntegerField(default=0)),
                ('full_time_to_beat', models.IntegerField(default=0)),
                ('number_of_players', models.IntegerField(default=0)),
                ('times_recommended', models.IntegerField(default=0)),
                ('times_passed_over', models.IntegerField(default=0)),
                ('metacritic', models.FloatField(default=0.0)),
                ('user_score', models.FloatField(default=0.0)),
            ],
            bases=('gameslist.game',),
        ),
        migrations.CreateModel(
            name='Wish',
            fields=[
                ('game_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gameslist.Game')),
                ('date_added', models.DateField(verbose_name='date added')),
                ('below_latte', models.BooleanField(default=False)),
            ],
            bases=('gameslist.game',),
        ),
    ]
